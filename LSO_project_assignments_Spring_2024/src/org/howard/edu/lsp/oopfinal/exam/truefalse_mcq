Howard University
College of Engineering and Architecture
Department of Electrical Engineering & Computer Science

Large Scale / Object-Oriented Programming
Spring 2024

Final Exam (100 pts.)
May 2, 2024



Name	:______rojan paneru________________________


I declare that I have not collaborated with anyone on this examination


X ______rojan paneru__________________________________
Type Your Name Here


Instructions:
Submit completed exam to your github repository.  Create packages:
org.howard.edu.lsp.oopfinal.exam
org.howard.edu.lsp.oopfinal.question1 
org.howard.edu.lsp.oopfinal.question2
org.howard.edu.lsp.oopfinal.question3

Verify that the commit(s) completed successfully in your Git repository

OPEN BOOK, OPEN NOTES.  THERE IS NO COLLABORATION ON THIS EXAM
















Section 1: True/False. (15 pts., 1 pt. each)

T  False When designing a class, each class should be designed to have multiple goals so that your overall design can have fewer classes
T  False Inheritance provides a mechanism by which changes to lower-level classes can be propagated to all super classes quickly
T  False Design patterns are reusable libraries that can immediately be used in your code
T  False Frameworks and design patterns are the same thing as far as designers are concerned
True  F Because of potential problems, developers must be aware of the effects of modifications in a superclass and in each of the subclasses that will inherit the modifications.
True  F Factory pattern can be combined with other patterns
T  False Creational design patterns are all about Class and Object composition. 
T  False Structural design patterns are all about class instantiation
T  False Design patterns are a mechanism that enable developer to reuse code in their implementations.
T  False Behavioral design patterns are all about Class's objects communication
T  False Information hiding makes program maintenance software development more difficult because other developer are not privy to an object’s implementation details.
True  F In Java, the signature of a method is completely specified by the name of the method and the parameters that must be passed to the method.
T  False The relationship between two objects related by composition cannot be changed at runtime. 
T  False When iterating a Java HashSet, you are guaranteed to retrieve objects stored in the same order they were inserted
 True  F Software designs are refactored to allow the creation of software that is easier to maintain and reuse.


















Section 2: Multiple Choice, answer each question. (20 pts., 1 pt. each)

Which of the following option leads to the portability and security of Java?
Bytecode is executed by JVM-Answer
Use of exception handling
Dynamic binding between objects
Proper encapsulation of classes and objects.

What is the role of mocking frameworks like Mockito in unit testing?
They provide assertions for test cases.
They are used to create mock objects for unit tests.-answer
They execute test cases in parallel.
They automate the testing process.

What is the primary purpose of unit testing?
To verify the correctness of the entire system.
To test the integration between different components.
To validate that individual units of code work as expected.-answer
To assess the performance of the application.

What is regression testing?
Testing the system in various environments.
Repeating previous tests to ensure existing functionality is not affected by changes.-answer
Testing the performance of the system under load.
Verifying the correctness of a single unit of code.

The root interface of the Java Collection framework hierarchy is
Collection-answer
Root
Collections
List/Set

What interface in the Java Collections framework extends Map and represents a collection of key/value pairs where keys are ordered?
HashMap
LinkedHashMap
TreeMap-answer
HashTable

What interface in the Java Collections framework represents a last-in, first-out (Last In First Out) collection of objects?
Queue
List
HashMap
Stack-answer

Which of the following is true about design patterns? (Choose the best answer). 
Design patterns represent the best practices used by experienced object-oriented software developers.
Design patterns are solutions to general problems that software developers faced during software development.
Design patterns are obtained by trial and error by numerous software developers over quite a substantial period.
All of the above.-answer

You want all the clients using class A to use the same instance of class A when the class is instantiated, what should you do to achieve this goal?  
Mark class A final 
Mark class A abstract 
Apply the Singleton pattern to class A -answer
Apply the Proxy pattern to class A

You have a class that accepts and returns values in British Imperial units (feet, miles, etc.), but you need to use metric units. The design pattern that would best solve your problem is:  
Adapter-answer
Decorator
Delegation
Proxy

Which of the following describes the Facade pattern correctly?
This pattern allows a user to add new functionality to an existing object without altering its structure.
This pattern is used when we need to treat a group of objects in a similar way as a single object.
This pattern hides the complexities of the system and providers an interface to the client using which the client can access the system.-answer
This pattern is primarily used to reduce the number of objects created and to decrease memory footprint and increase performance.

Which of the following are concerned with communication between objects?
J2EE Design Patterns
Behavioral Design Patterns-answer
Structural Design Patterns
Creational Design Patterns








Which of the following is correct about Creational design patterns?
These design patterns are specifically concerned with communication between objects.
These design patterns provide a way to create objects while hiding the creation logic, rather than instantiating objects directly using new operator.-answer
These design patterns concern class and object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.
None of the above.

What is the role of the Template Method in the Template Method design pattern?
To ensure a class has only one instance and provides a global point of access to it.
To define a family of algorithms, encapsulate each one, and make them interchangeable.
To provide an interface for creating families of related or dependent objects without specifying their concreate classes.
To define the skeleton of an algorithm in the superclass but let subclasses override specific steps of the algorithm without changing its structure.-answer
Which of the following describes the Factory pattern correctly? 
This pattern creates an object without exposing the creation logic to the client and refers to newly created objects using a common interface.-answer
In this pattern, an interface is responsible for creating a factory of related objects without explicitly specifying their classes.
This pattern involves a single class that is responsible to create an object while making sure that only a single object is created.
This pattern is used when we want to pass data with multiple attributes in one shot from client to server.

In the Command design pattern, what is the purpose of the Command interface?
To provide an interface for creating families of related or dependent objects without specifying their concrete classes.
To encapsulate a request as an object, thereby allowing for parameterization of clients with different requests.-answer
To define a family of algorithms, encapsulate each one, and make them interchangeable.
To ensure a class has only one instance.

What is the main advantage of the Strategy design pattern?
It allows a class to have only one instance.
It defines a family of algorithms, encapsulates each one, and makes them interchangeable.-answer
It allows the definition of a family of algorithms, encapsulates each one, and makes them interchangeable.
It enables the selection of an algorithm’s implementation at runtime.

This design pattern should be used to access the contents of a collection without exposing its internal representation, to support multiple traversals of a collection, and to provide a uniform interface for traversing different collections.  
Template method
Strategy
Iterator-answer
Factory method

Which design pattern should you use when you want to provide a simple interface to a complex subsystem?  
Adapter
Facade-answer
Abstract Factory
Singleton

What is the intent of the Adapter design pattern?
To provide an interface for creating families of related or dependent objects without specifying their concrete classes.
To convert the interface of a class into another interface clients expect.-answer
To ensure a class has only one instance.
To define a family of algorithms, encapsulate each one, and make them interchangeable.


